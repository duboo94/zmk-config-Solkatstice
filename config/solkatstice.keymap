#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <physical_layouts.dtsi>

#define DEF 0
#define JIS 1
#define FUNC 2
#define NUM 3
#define NUMJ 4
#define MOUSE 5
#define SCROLL 6
#define BT 7

&mt {
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
};

/ {
  chosen {
    zmk,physical-layout = &solkatstice_physical_layout;
  };

  solkatstice_physical_layout: solkatstice_physical_layout {
      compatible = "zmk,physical-layout";
      display-name = "Default";
      transform = <&default_transform>;
      kscan = <&kscan0>;
        keys  //                     w   h    x    y     rot    rx    ry
        = <&key_physical_attrs 100 100  200    0       0     0     0>
        , <&key_physical_attrs 100 100  300    0       0     0     0>
        , <&key_physical_attrs 100 100  400    0       0     0     0>
        , <&key_physical_attrs 100 100  500    0       0     0     0>
        , <&key_physical_attrs 100 100  600    0       0     0     0>
        , <&key_physical_attrs 100 100  700    0       0     0     0>
        , <&key_physical_attrs 100 100  800    0       0     0     0>
        , <&key_physical_attrs 100 100  900    0       0     0     0>
        , <&key_physical_attrs 100 100 1000    0       0     0     0>
        , <&key_physical_attrs 100 100 1100    0       0     0     0>
        , <&key_physical_attrs 125 100 1200    0       0     0     0>
        , <&key_physical_attrs 125 100  200  100       0     0     0>
        , <&key_physical_attrs 100 100  325  100       0     0     0>
        , <&key_physical_attrs 100 100  425  100       0     0     0>
        , <&key_physical_attrs 100 100  525  100       0     0     0>
        , <&key_physical_attrs 100 100  625  100       0     0     0>
        , <&key_physical_attrs 100 100  725  100       0     0     0>
        , <&key_physical_attrs 100 100  825  100       0     0     0>
        , <&key_physical_attrs 100 100  925  100       0     0     0>
        , <&key_physical_attrs 100 100 1025  100       0     0     0>
        , <&key_physical_attrs 100 100 1125  100       0     0     0>
        , <&key_physical_attrs 100 100 1225  100       0     0     0>
        , <&key_physical_attrs 175 100  200  200       0     0     0>
        , <&key_physical_attrs 100 100  375  200       0     0     0>
        , <&key_physical_attrs 100 100  475  200       0     0     0>
        , <&key_physical_attrs 100 100  575  200       0     0     0>
        , <&key_physical_attrs 100 100  675  200       0     0     0>
        , <&key_physical_attrs 100 100  775  200       0     0     0>
        , <&key_physical_attrs 100 100  875  200       0     0     0>
        , <&key_physical_attrs 100 100  975  200       0     0     0>
        , <&key_physical_attrs 100 100 1075  200       0     0     0>
        , <&key_physical_attrs 100 100 1175  200       0     0     0>
        , <&key_physical_attrs 100 100 1300  225       0     0     0>
        , <&key_physical_attrs 125 100  325  325       0     0     0>
        , <&key_physical_attrs 125 100  450  325       0     0     0>
        , <&key_physical_attrs 125 100  600  325       0     0     0>
        , <&key_physical_attrs 125 100  725  325       0     0     0>
        , <&key_physical_attrs 100 100 1200  325       0     0     0>
        , <&key_physical_attrs 100 100 1300  325       0     0     0>
        , <&key_physical_attrs 100 100 1400  325       0     0     0>
        , <&key_physical_attrs 100 100    0    0       0     0     0>
        , <&key_physical_attrs 100 100    0  100       0     0     0>
        , <&key_physical_attrs 100 100    0  200       0     0     0>
        , <&key_physical_attrs 100 100 1500    0       0     0     0>
        , <&key_physical_attrs 100 100 1500  100       0     0     0>
        , <&key_physical_attrs 100 100 1500  200       0     0     0>
        ;
    };

    macros {
        leader1: leader1 {
            compatible = "zmk,behavior-leader-key";
            #binding-cells = <0>;
            leftdown { sequence = <F14 F15>; bindings = <&kp PG_DN>; };
            out { sequence = <O U T>; bindings = <&out OUT_TOG>; };
        };
        leader2: leader2 {
            compatible = "zmk,behavior-leader-key";
            #binding-cells = <0>;
            leftup   { sequence = <F14 F13>; bindings = <&kp PG_UP>; };
        };
        leader3: leader3 {
            compatible = "zmk,behavior-leader-key";
            #binding-cells = <0>;
            rightdown { sequence = <F17 F18>; bindings = <&kp END>; };
        };
        leader4: leader4 {
            compatible = "zmk,behavior-leader-key";
            #binding-cells = <0>;
            rightup   { sequence = <F17 F16>; bindings = <&kp HOME>; };
        };
        mLCTL: mLCTL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LCTRL>;
        };
        mF13: mF13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F13>
                     , <&leader1>;
        };
        mF14: mF14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F14>;
        };
        mF15: mF15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F15>
                     , <&leader2>;
        };
        mF16: mF16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F16>
                    , <&leader3>;
        };
        mF17: mF17 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F17>;
        };
        mF18: mF18 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F18>
                    , <&leader4>;
        };
        mESC: mESC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp ESC>;
        };
    };

    behaviors {
        toJIS: toJIS {
            compatible = "zmk,behavior-hold-tap";
            label = "toJIS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&tog>, <&kp>;
        };
        mo2: mo2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp LBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo6: mo6 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo7: mo7 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp LS(N6)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo8: mo8 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp LS(SQT)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo9: mo9 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp LS(N8)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo0: mo0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp LS(N9)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moMINUS: moMINUS {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp LS(INT_RO)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moEQUAL: moEQUAL {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(MINUS)>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moLBKT: moLBKT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp LS(RBRC)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moRBKT: moRBKT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp LS(BSLH)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moSEMI: moSEMI {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp SQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moSQT: moSQT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(N7)>, <&kp LS(N2)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moGRAVE: moGRAVE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(LBRC)>, <&kp LS(EQUAL)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    }; 

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label="Def";
            bindings = <
&kp CAPS         &kp Q            &kp W            &kp E            &kp R            &kp T            &kp Y            &kp U            &kp I            &kp O             &kp P  
&toJIS 1 TAB     &kp A            &mt LEFT_ALT S   &mt LEFT_WIN D   &mt LCTRL F      &kp G            &kp H            &mt RCTRL J      &mt RIGHT_WIN K  &mt RIGHT_ALT L   &lt 7 BSLH
&mt LSHFT SPACE  &kp Z            &kp X            &kp C            &kp V            &kp B            &kp N            &kp M            &kp COMMA        &kp DOT           &kp UP  
                 &lt 3 LWIN       &kp LALT         &lt 2 SPACE      &lt 3 SPACE                                                         &kp LEFT         &kp DOWN          &kp RIGHT
                 &mF13            &mF14            &mF15            &mF16            &mF17            &mF18
            >;
        };

        jis_layer {
            label="JIS";
            bindings = <
&kp CAPS         &kp Q            &kp W            &kp E            &kp R            &kp T            &kp Y            &kp U            &kp I            &kp O             &kp P  
&toJIS 1 TAB     &kp A            &mt LEFT_ALT S   &mt LEFT_WIN D   &mt LCTRL F      &kp G            &kp H            &mt RCTRL J      &mt RIGHT_WIN K  &mt RIGHT_ALT L   &lt 7 BSLH  
&mt LSHFT SPACE  &kp Z            &kp X            &kp C            &kp V            &kp B            &kp N            &kp M            &kp COMMA        &kp DOT           &kp UP  
                 &lt 4 LWIN       &kp LALT         &lt 2 SPACE      &lt 4 SPACE                                                         &kp LEFT         &kp DOWN          &kp RIGHT
                 &mF13            &mF14            &mF15            &mF16            &mF17            &mF18
            >;
        };

        function_layer {
            label="Func";
            bindings = <
&kp GRAVE        &kp PG_UP        &kp UP           &kp PG_DN        &kp HOME         &trans           &kp F1           &kp F2           &kp F3           &kp F4            &kp F5  
&trans           &kp LEFT         &kp DOWN         &kp RIGHT        &kp END          &trans           &kp F6           &mt RCTRL F7     &mt RIGHT_WIN F8 &mt RIGHT_ALT F9  &kp F10  
&mt LSHFT SPACE  &kp BACKSPACE    &kp DEL          &trans           &trans           &trans           &kp F11          &kp F12          &trans           &trans            &trans  
                 &trans           &kp ENTER        &kp ENTER        &trans                                                              &trans           &trans            &trans
                 &mF13            &mF14            &mF15            &mF16            &mF17            &mF18
            >;
        };

        num_layer {
            label="Num";
            bindings = <
&kp ESC           &kp N1          &kp N2           &kp N3           &kp N4           &kp N5           &kp N6           &kp N7           &kp N8           &kp N9            &kp N0  
&trans            &trans          &trans           &trans           &trans           &trans           &kp MINUS        &kp EQUAL        &kp LBKT         &kp RBKT          &kp BSLH  
&mt LSHFT SPACE   &kp BACKSPACE   &kp DEL          &trans           &trans           &trans           &trans           &kp FSLH         &kp SEMI         &kp SQT           &trans  
                  &trans          &kp ENTER        &kp ENTER        &trans                                                              &trans           &trans            &trans
                 &mF13            &mF14            &mF15            &mF16            &mF17            &mF18
            >;
        };

        numjis_layer {
            label="NumJIS";
            bindings = <
&kp ESC           &kp N1          &mo2             &kp N3           &kp N4           &kp N5           &mo6             &mo7             &mo8             &mo9              &mo0
&trans            &trans          &trans           &trans           &trans           &trans           &moMINUS         &moEQUAL         &moLBKT          &moRBKT           &kp INT3  
&trans            &kp BACKSPACE   &kp DEL          &trans           &trans           &trans           &trans           &kp FSLH         &moSEMI          &moSQT            &trans  
                  &trans          &kp ENTER        &kp ENTER        &trans                                                              &trans           &trans            &trans
                 &mF13            &mF14            &mF15            &mF16            &mF17            &mF18
            >;
        };

        mouse_layer {
            label="Mouse";
            bindings = <
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans            &trans  
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans            &trans  
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &mkp MB1         &mkp MB3         &mkp MB2          &trans  
                 &trans           &trans           &trans           &trans                                                              &trans           &trans            &trans
                 &mF13            &mF14            &mF15            &mF16            &mF17            &mF18
            >;
        };

        scroll_layer {
            label="Scroll";
            bindings = <
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans            &trans  
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans            &trans  
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &mkp MB1         &mkp MB3         &mkp MB2          &trans  
                 &trans           &trans           &trans           &trans                                                              &trans           &trans            &trans
                 &mF13            &mF14            &mF15            &mF16            &mF17            &mF18
            >;
        };

        bt_layer {
            label="BT";
            bindings = <
&trans           &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans           &trans           &trans           &trans           &trans  
&trans           &bt BT_CLR       &bt BT_CLR_ALL   &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans  
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans  
                 &trans           &trans           &trans           &trans                                                              &trans           &trans           &trans
                 &mF13            &mF14            &mF15            &mF16            &mF17            &mF18
            >;
        };
    };
};